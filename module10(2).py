# Process
# Pool
# Queue
# Lock, Event, Condition
# cpu_count()

from time import perf_counter
from multiprocessing import Pool, cpu_count
from PIL import Image

# def square(n):
#     return n * n
#
#
# if __name__ == '__main__':
#     start = perf_counter()
#     with Pool(processes=cpu_count()) as pool:
#         values
#         res = pool.map(square, values)
#         end = perf_counter()
#         print(res)
#         print(pool)
#         print(end-start)
# #       0.07915704185143113


# def resize_img(image_path):
#     image = Image.open(image_path)
#     image = image.resize((600, 600))
#     image.save(image_path)
#
# if __name__ == '__main__':
#     start = perf_counter()
#     with Pool(processes=5) as pool:
#         all_images = []
#         for i in range(2,23):
#             all_images.append(f'./images/image{i}.jpg')
#         res = pool.map(resize_img, all_images)
#     end = perf_counter()
#     print(end-start)
